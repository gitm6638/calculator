/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.awt.Color;
import static java.awt.event.KeyEvent.*;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.JTextField;


/**
 *
 * @author lib
 */
public class scientific_cal extends javax.swing.JFrame {

    /**
     * Creates new form scientific_cal
     */
    String result, op1, op2, operator,temp_for_tego;
    int result_setter;
    int count = 0;
    
    public scientific_cal() {
        initComponents();
        this.setLocation(400, 150);
        setBounds(400, 150, 470, 370);
        rb_radian.setSelected(true);
        operand_bar.setEnabled(false);
        operand_bar.setHorizontalAlignment(JTextField.RIGHT);
        scien_input.setHorizontalAlignment(JTextField.RIGHT);
        operand_bar.setText("");
        scien_input.setText("");
        operator = "";
        set_color_focus_button();
        scien_input.setFocusable(true);
        scien_input.requestFocusInWindow();
        result=String.valueOf(0);
//        URL iconURL = getClass().getResource("calculator/src/calculator/scientific.png");
//        ImageIcon icon = new ImageIcon(iconURL);
//        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        decimal = new javax.swing.JButton();
        one = new javax.swing.JButton();
        four = new javax.swing.JButton();
        dzero = new javax.swing.JButton();
        three = new javax.swing.JButton();
        sqrt = new javax.swing.JButton();
        bt_cubroot = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        bt_onebyx = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        precent = new javax.swing.JButton();
        scien_del = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        five = new javax.swing.JButton();
        bt_tan = new javax.swing.JButton();
        bt_ln = new javax.swing.JButton();
        two = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        right_pen = new javax.swing.JButton();
        bt_xcube = new javax.swing.JButton();
        bt_cos = new javax.swing.JButton();
        rb_theta = new javax.swing.JRadioButton();
        bt_xtoy = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        bt_pi = new javax.swing.JButton();
        bt_sine = new javax.swing.JButton();
        multi = new javax.swing.JButton();
        bt_nfact = new javax.swing.JButton();
        rb_radian = new javax.swing.JRadioButton();
        bt_equal = new javax.swing.JButton();
        six = new javax.swing.JButton();
        division = new javax.swing.JButton();
        bt_square = new javax.swing.JButton();
        bt_exp = new javax.swing.JButton();
        bt_ans = new javax.swing.JButton();
        bt_log = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        left_pen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        plus_minus = new javax.swing.JButton();
        operand_bar = new javax.swing.JLabel();
        scien_input = new javax.swing.JLabel();
        menu_bar = new javax.swing.JMenuBar();
        view_menu = new javax.swing.JMenu();
        view_standard = new javax.swing.JMenuItem();
        view_sciencetific = new javax.swing.JMenuItem();
        view_programmer = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        edit_copy = new javax.swing.JMenuItem();
        edit_paste = new javax.swing.JMenuItem();
        help_menu = new javax.swing.JMenu();
        help_show = new javax.swing.JMenuItem();
        update = new javax.swing.JMenuItem();

        jLabel2.setText("© pankaj&company                                                                                                             All Rights Reserved");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scientific");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        decimal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        decimal.setText(".");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        getContentPane().add(decimal);
        decimal.setBounds(290, 250, 50, 40);

        one.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        getContentPane().add(one);
        one.setBounds(290, 210, 50, 40);

        four.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        getContentPane().add(four);
        four.setBounds(290, 170, 50, 40);

        dzero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dzero.setText("00");
        dzero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dzeroActionPerformed(evt);
            }
        });
        getContentPane().add(dzero);
        dzero.setBounds(240, 250, 50, 40);

        three.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        getContentPane().add(three);
        three.setBounds(190, 210, 50, 40);

        sqrt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sqrt.setText("√");
        sqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtActionPerformed(evt);
            }
        });
        getContentPane().add(sqrt);
        sqrt.setBounds(390, 130, 60, 40);

        bt_cubroot.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_cubroot.setText(" ³√x ");
        getContentPane().add(bt_cubroot);
        bt_cubroot.setBounds(10, 250, 60, 40);

        eight.setFont(eight.getFont().deriveFont(eight.getFont().getStyle() | java.awt.Font.BOLD));
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        getContentPane().add(eight);
        eight.setBounds(240, 130, 50, 40);

        bt_onebyx.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_onebyx.setText("1/x");
        bt_onebyx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_onebyxActionPerformed(evt);
            }
        });
        getContentPane().add(bt_onebyx);
        bt_onebyx.setBounds(10, 210, 61, 40);

        nine.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        getContentPane().add(nine);
        nine.setBounds(190, 130, 50, 40);

        precent.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        precent.setText("%");
        precent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precentActionPerformed(evt);
            }
        });
        getContentPane().add(precent);
        precent.setBounds(340, 130, 50, 40);

        scien_del.setText("←");
        scien_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scien_delActionPerformed(evt);
            }
        });
        getContentPane().add(scien_del);
        scien_del.setBounds(390, 90, 60, 40);

        seven.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        getContentPane().add(seven);
        seven.setBounds(290, 130, 50, 40);

        plus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        getContentPane().add(plus);
        plus.setBounds(340, 210, 50, 40);

        five.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        getContentPane().add(five);
        five.setBounds(240, 170, 50, 40);

        bt_tan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_tan.setText("tan");
        bt_tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tanActionPerformed(evt);
            }
        });
        getContentPane().add(bt_tan);
        bt_tan.setBounds(130, 170, 60, 40);

        bt_ln.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_ln.setText("ln");
        bt_ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_lnActionPerformed(evt);
            }
        });
        getContentPane().add(bt_ln);
        bt_ln.setBounds(130, 130, 60, 40);

        two.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        getContentPane().add(two);
        two.setBounds(240, 210, 50, 40);

        zero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        getContentPane().add(zero);
        zero.setBounds(190, 250, 50, 40);

        right_pen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        right_pen.setText(") ");
        right_pen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                right_penActionPerformed(evt);
            }
        });
        getContentPane().add(right_pen);
        right_pen.setBounds(240, 90, 50, 40);

        bt_xcube.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_xcube.setText(" X³");
        getContentPane().add(bt_xcube);
        bt_xcube.setBounds(70, 170, 60, 40);

        bt_cos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_cos.setText("cos");
        bt_cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cosActionPerformed(evt);
            }
        });
        getContentPane().add(bt_cos);
        bt_cos.setBounds(130, 210, 60, 40);

        buttonGroup1.add(rb_theta);
        rb_theta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rb_theta.setText(" θ");
        getContentPane().add(rb_theta);
        rb_theta.setBounds(10, 90, 60, 40);

        bt_xtoy.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_xtoy.setText("X^Y");
        getContentPane().add(bt_xtoy);
        bt_xtoy.setBounds(70, 210, 60, 40);

        reset.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reset.setText("c");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(290, 90, 50, 40);

        bt_pi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_pi.setText("Pi");
        getContentPane().add(bt_pi);
        bt_pi.setBounds(10, 170, 61, 40);

        bt_sine.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_sine.setText("sin");
        bt_sine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_sineActionPerformed(evt);
            }
        });
        getContentPane().add(bt_sine);
        bt_sine.setBounds(130, 250, 60, 40);

        multi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        multi.setText("*");
        multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiActionPerformed(evt);
            }
        });
        getContentPane().add(multi);
        multi.setBounds(390, 210, 60, 40);

        bt_nfact.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_nfact.setText("n!");
        getContentPane().add(bt_nfact);
        bt_nfact.setBounds(70, 250, 60, 40);

        buttonGroup1.add(rb_radian);
        rb_radian.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rb_radian.setText("rdn");
        getContentPane().add(rb_radian);
        rb_radian.setBounds(70, 90, 60, 40);

        bt_equal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_equal.setText("=");
        bt_equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_equalActionPerformed(evt);
            }
        });
        getContentPane().add(bt_equal);
        bt_equal.setBounds(340, 250, 50, 40);

        six.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        getContentPane().add(six);
        six.setBounds(190, 170, 50, 40);

        division.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        division.setText("/");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });
        getContentPane().add(division);
        division.setBounds(390, 170, 60, 40);

        bt_square.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_square.setText(" x²");
        getContentPane().add(bt_square);
        bt_square.setBounds(70, 130, 60, 40);

        bt_exp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_exp.setText("Exp");
        bt_exp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_expActionPerformed(evt);
            }
        });
        getContentPane().add(bt_exp);
        bt_exp.setBounds(130, 90, 60, 40);

        bt_ans.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_ans.setText("ans");
        getContentPane().add(bt_ans);
        bt_ans.setBounds(390, 250, 60, 40);

        bt_log.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_log.setText("log");
        bt_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_logActionPerformed(evt);
            }
        });
        getContentPane().add(bt_log);
        bt_log.setBounds(10, 130, 60, 40);

        minus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        getContentPane().add(minus);
        minus.setBounds(340, 170, 50, 40);

        left_pen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        left_pen.setText("(");
        left_pen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                left_penActionPerformed(evt);
            }
        });
        getContentPane().add(left_pen);
        left_pen.setBounds(190, 90, 49, 40);

        jLabel1.setText("© pankaj&company                                                                           All Rights Reserved");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 300, 440, 20);

        plus_minus.setText("± ");
        plus_minus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                plus_minusMouseEntered(evt);
            }
        });
        plus_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus_minusActionPerformed(evt);
            }
        });
        getContentPane().add(plus_minus);
        plus_minus.setBounds(340, 90, 50, 40);

        operand_bar.setBackground(new java.awt.Color(255, 255, 51));
        operand_bar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        operand_bar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        operand_bar.setOpaque(true);
        getContentPane().add(operand_bar);
        operand_bar.setBounds(10, 10, 440, 30);

        scien_input.setBackground(new java.awt.Color(255, 255, 255));
        scien_input.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        scien_input.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        scien_input.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scien_input.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        scien_input.setOpaque(true);
        scien_input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                scien_inputKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                scien_inputKeyTyped(evt);
            }
        });
        getContentPane().add(scien_input);
        scien_input.setBounds(10, 40, 440, 40);

        view_menu.setText("View");
        view_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_menuActionPerformed(evt);
            }
        });

        view_standard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        view_standard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/standard.png"))); // NOI18N
        view_standard.setText("Standard");
        view_standard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_standardActionPerformed(evt);
            }
        });
        view_standard.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                view_standardFocusGained(evt);
            }
        });
        view_menu.add(view_standard);

        view_sciencetific.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_MASK));
        view_sciencetific.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/scientific.png"))); // NOI18N
        view_sciencetific.setText("Sciencetific");
        view_sciencetific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_sciencetificActionPerformed(evt);
            }
        });
        view_menu.add(view_sciencetific);

        view_programmer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.ALT_MASK));
        view_programmer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/programmer.png"))); // NOI18N
        view_programmer.setText("Programmer");
        view_programmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_programmerActionPerformed(evt);
            }
        });
        view_menu.add(view_programmer);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/close.png"))); // NOI18N
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        view_menu.add(close);

        menu_bar.add(view_menu);

        jMenu2.setText("Edit");

        edit_copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        edit_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/edit_copy.png"))); // NOI18N
        edit_copy.setText("Copy");
        jMenu2.add(edit_copy);

        edit_paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        edit_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/edit_paste.png"))); // NOI18N
        edit_paste.setText("Paste");
        jMenu2.add(edit_paste);

        menu_bar.add(jMenu2);

        help_menu.setText("Help");

        help_show.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        help_show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/help.png"))); // NOI18N
        help_show.setText("View Help");
        help_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_showActionPerformed(evt);
            }
        });
        help_menu.add(help_show);

        update.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/system_update.png"))); // NOI18N
        update.setText("Check for update");
        help_menu.add(update);

        menu_bar.add(help_menu);

        setJMenuBar(menu_bar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
        scien_input.setText(scien_input.getText()+".");
    }//GEN-LAST:event_decimalActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"1");
    }//GEN-LAST:event_oneActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"4");
    }//GEN-LAST:event_fourActionPerformed

    private void dzeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dzeroActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"00");
    }//GEN-LAST:event_dzeroActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"3");
    }//GEN-LAST:event_threeActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"8");
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"9");
    }//GEN-LAST:event_nineActionPerformed

    private void precentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precentActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"%");
    }
    else
    {
        if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            operand_bar.setText(result);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "%";
                // cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "%");
                
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                operator = "%";
                operand_bar.setText(operand_bar.getText() + op2 + "%");
                scien_input.setText(result);
            }
        }
      }  
    }//GEN-LAST:event_precentActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"7");
    }//GEN-LAST:event_sevenActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"+");
    }
    else
    {
         if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            // scien_input.setText("");
            operator = "+";
            operand_bar.setText(result + operator);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "+";
                //cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "+");
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                operator = "+";
                operand_bar.setText(operand_bar.getText() + op2 + "+");
                scien_input.setText(result);
            }
        }
      }  
    }//GEN-LAST:event_plusActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"5");
    }//GEN-LAST:event_fiveActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"2");
    }//GEN-LAST:event_twoActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"0");
    }//GEN-LAST:event_zeroActionPerformed

    private void right_penActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_right_penActionPerformed
        // TODO add your handling code here:
        operand_bar.setText(operand_bar.getText()+scien_input.getText()+")");
        result_setter=0;
    }//GEN-LAST:event_right_penActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        scien_input.setText("");
        operand_bar.setText("");
        count=0;
        result_setter=0;
        result=String.valueOf(0);
//          scientific_cal();
    }//GEN-LAST:event_resetActionPerformed

    private void multiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"*");
    }
    else
    {    
        if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            // scien_input.setText("");
            operator = "*";
            operand_bar.setText(result + operator);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "*";
                //cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "*");
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                operator = "*";
                operand_bar.setText(operand_bar.getText() + op2 + "*");
                scien_input.setText(result);
            }
        }
      }
    }//GEN-LAST:event_multiActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        if (check_for_retype() == 1) {
            scien_input.setText("");
            result_setter = 1;
        }
        scien_input.setText(scien_input.getText()+"6");
    }//GEN-LAST:event_sixActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"/");
    }
    else
    {    
        if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            scien_input.setText("");
            operand_bar.setText(result);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "/";
                // cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "/");
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                operator = "/";
                operand_bar.setText(operand_bar.getText() + op2 + "/");
                scien_input.setText(result);
            }
        }
      }  
    }//GEN-LAST:event_divisionActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"-");
    }
    else
    {    
         if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            scien_input.setText("");
            operand_bar.setText(result);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "-";
                //cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "-");
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                operator = "-";
                operand_bar.setText(operand_bar.getText() + op2 + "-");
                scien_input.setText(result);
            }
        }
      }   
    }//GEN-LAST:event_minusActionPerformed

    private void left_penActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_left_penActionPerformed
        // TODO add your handling code here:
        operand_bar.setText(operand_bar.getText()+"(");
    }//GEN-LAST:event_left_penActionPerformed

    private void view_standardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_standardActionPerformed
        // TODO add your handling code here:
        standard_cal sd=new standard_cal();
        sd.setVisible(true);
        dispose();
    }//GEN-LAST:event_view_standardActionPerformed

    private void view_standardFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_view_standardFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_view_standardFocusGained

    private void view_sciencetificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_sciencetificActionPerformed
        // TODO add your handling code here:
        scientific_cal  sc=new scientific_cal();
        sc.setVisible(true);
        dispose();
    }//GEN-LAST:event_view_sciencetificActionPerformed

    private void view_programmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_programmerActionPerformed
        // TODO add your handling code here:
        programmer_cal pr=new programmer_cal();
        pr.setVisible(true);
        dispose();
    }//GEN-LAST:event_view_programmerActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    private void view_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_view_menuActionPerformed

    private void help_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_showActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_help_showActionPerformed

    private void scien_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scien_delActionPerformed
        // TODO add your handling code here:
          int len=scien_input.getText().length();
          if(len!=0)
          {
           String input=scien_input.getText();
           scien_input.setText(input.substring(0,len-1));
          }
    }//GEN-LAST:event_scien_delActionPerformed

    private void sqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtActionPerformed
        // TODO add your handling code here:
    if(operand_bar.getText().endsWith(")"))
    {
       operand_bar.setText(operand_bar.getText()+"+");
    }
    else
    {
        if (operator.equals("=") && count != 0) {
            operand_bar.setText("");
            result = scien_input.getText();
            scien_input.setText("");
            operand_bar.setText(result);
            count = 0;
        } else {
            if (count++ == 0) {
                result = op1 = scien_input.getText();
                operator = "*";
                //cal(op1,operator);
                operand_bar.setText(operand_bar.getText() + op1 + "*");
            } else {
                op2 = scien_input.getText();
                cal(op2, operator);
                scien_input.setText(result);                
                operator = "*";
                operand_bar.setText(operand_bar.getText() + op2 + "*");
            }
        }
      }  
    }//GEN-LAST:event_sqrtActionPerformed

    private void plus_minusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plus_minusMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_plus_minusMouseEntered

    private void plus_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plus_minusActionPerformed
        // TODO add your handling code here:
        scien_input.setText(String.valueOf(Float.valueOf(scien_input.getText()) * (-1)));
    }//GEN-LAST:event_plus_minusActionPerformed

    private void scien_inputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scien_inputKeyTyped
        // TODO add your handling code here:
      
    }//GEN-LAST:event_scien_inputKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        scien_input.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void bt_equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_equalActionPerformed
        // TODO add your handling code here:
        op2 = scien_input.getText();
        if (!op2.equals("")) {
            cal(op2, operator);
            operand_bar.setText(operand_bar.getText() + op2);
            scien_input.setText("");
            scien_input.setText(result);
            operator = "=";
            //count=0;
        } else {
            JOptionPane.showMessageDialog(null, " illegal Expression ", "Error!!", 1);
        }
    }//GEN-LAST:event_bt_equalActionPerformed

    private void scien_inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scien_inputKeyPressed
        // TODO add your handling code here:
        keyboard(evt.getKeyCode());
    }//GEN-LAST:event_scien_inputKeyPressed

    private void bt_onebyxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_onebyxActionPerformed
        // TODO add your handling code here:
        scien_input.setText(String.valueOf(1 / Float.valueOf(scien_input.getText())));
    }//GEN-LAST:event_bt_onebyxActionPerformed

    private void bt_sineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_sineActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"sinR("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.sin(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"sinR("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.sin((Double.valueOf(scien_input.getText())))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"sinD("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.sin(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"cosD("+"0"+")");
            temp_for_tego=String.valueOf((Math.sin((Math.PI*Double.valueOf(scien_input.getText()))/180)));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_sineActionPerformed

    private void bt_cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cosActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"cosR("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.cos(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"cosR("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.cos((Double.valueOf(scien_input.getText())))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"cosD("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.cos(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"sinD("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.cos((Math.PI*Double.valueOf(scien_input.getText()))/180)));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_cosActionPerformed

    private void bt_tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tanActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"tanR("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.tan(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"tanR("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.tan((Double.valueOf(scien_input.getText())))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"tanD("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.tan(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"tanD("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.tan((Math.PI*Double.valueOf(scien_input.getText()))/180)));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_tanActionPerformed

    private void bt_lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_lnActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"lnR("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.log(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"lnR("+scien_input.getText()+")");
            temp_for_tego=String.valueOf(Math.log((Double.valueOf(scien_input.getText()))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"lnD("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.log(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"lnD("+scien_input.getText()+")");
            temp_for_tego=String.valueOf(Math.log((Math.PI*Double.valueOf(scien_input.getText()))/180));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_lnActionPerformed

    private void bt_expActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_expActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"expR("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.exp(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"expR("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.exp((Double.valueOf(scien_input.getText())))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"expD("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.exp(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"exprD("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.exp((Math.PI*Double.valueOf(scien_input.getText()))/180)));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_expActionPerformed

    private void bt_logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_logActionPerformed
        // TODO add your handling code here:
        if(rb_radian.isSelected())
        {   
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"log10R("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.log10(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"log10R("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.log10((Double.valueOf(scien_input.getText())))));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
        else if(rb_theta.isSelected())
        {
            if(scien_input.getText().equals(""))
            {
               operand_bar.setText(operand_bar.getText()+"log10D("+"0"+")"); 
               temp_for_tego=String.valueOf(Math.log10(0));
            }
            else
            {
            operand_bar.setText(operand_bar.getText()+"log10D("+scien_input.getText()+")");
            temp_for_tego=String.valueOf((Math.log10((Math.PI*Double.valueOf(scien_input.getText()))/180)));
            }
            cal(temp_for_tego, operator);
            scien_input.setText(result);
        }
    }//GEN-LAST:event_bt_logActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(scientific_cal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(scientific_cal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(scientific_cal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(scientific_cal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new scientific_cal().setVisible(true);
            }
        });
    }
     
    public void set_color_focus_button() {
        one.setBackground(Color.white);
        one.setFocusable(false);
        two.setBackground(Color.white);
        two.setFocusable(false);
        three.setBackground(Color.white);
        three.setFocusable(false);
        four.setBackground(Color.white);
        four.setFocusable(false);
        five.setBackground(Color.white);
        five.setFocusable(false);
        six.setBackground(Color.white);
        six.setFocusable(false);
        seven.setBackground(Color.white);
        seven.setFocusable(false);
        eight.setBackground(Color.white);
        eight.setFocusable(false);
        nine.setBackground(Color.white);
        nine.setFocusable(false);
        zero.setBackground(Color.white);
        zero.setFocusable(false);
        dzero.setBackground(Color.white);
        dzero.setFocusable(false);
        decimal.setBackground(Color.white);
        decimal.setFocusable(false);
        
        bt_equal.setBackground(Color.white);
        bt_equal.setFocusable(false);
        
        plus_minus.setBackground(Color.white);
        plus_minus.setFocusable(false);
        scien_del.setBackground(Color.white);
        scien_del.setFocusable(false);
        reset.setBackground(Color.white);
        reset.setFocusable(false);
        
        division.setBackground(Color.white);
        division.setFocusable(false);
        sqrt.setBackground(Color.white);
        sqrt.setFocusable(false);
        multi.setBackground(Color.white);
        multi.setFocusable(false);
        minus.setBackground(Color.white);
        minus.setFocusable(false);
        plus.setBackground(Color.white);
        plus.setFocusable(false);
        precent.setBackground(Color.white);
        precent.setFocusable(false);
        bt_ans.setFocusable(false);
        bt_ans.setBackground(Color.white);
        left_pen.setFocusable(false);
        left_pen.setBackground(Color.white);
        right_pen.setFocusable(false);
        right_pen.setBackground(Color.white);
        bt_sine.setFocusable(false);
        bt_sine.setBackground(Color.white);
        bt_cos.setFocusable(false);
        bt_cos.setBackground(Color.white);
        bt_tan.setFocusable(false);
        bt_tan.setBackground(Color.white);
        bt_ln.setFocusable(false);
        bt_ln.setBackground(Color.white);
        bt_log.setFocusable(false);
        bt_log.setBackground(Color.white);
        rb_radian.setFocusable(false);
        rb_theta.setFocusable(false);
        rb_radian.setBackground(Color.white);
        rb_theta.setBackground(Color.white);
        bt_square.setFocusable(false);
        bt_square.setBackground(Color.white);
        bt_xcube.setFocusable(false);
        bt_xcube.setBackground(Color.white);
        bt_xtoy.setFocusable(false);
        bt_xtoy.setBackground(Color.white);
        bt_nfact.setFocusable(false);
        bt_nfact.setBackground(Color.white);
        bt_pi.setFocusable(false);
        bt_pi.setBackground(Color.white);
        bt_onebyx.setFocusable(false);
        bt_onebyx.setBackground(Color.white);
        bt_cubroot.setFocusable(false);
        bt_cubroot.setBackground(Color.white);
        bt_exp.setFocusable(false);
        bt_exp.setBackground(Color.white);
    }
    public void cal(String second, String operator) {
        result_setter = 0;
        switch (operator) {
            case "+":
                result = String.valueOf(BigDecimal.valueOf(Double.valueOf(result) +Double.valueOf(second)));
                break;
            case "-":
                result = String.valueOf(BigDecimal.valueOf(Float.valueOf(result) - Float.valueOf(second)));
                break;
            case "*":
                result = String.valueOf(BigDecimal.valueOf(Float.valueOf(result) * Float.valueOf(second)));
                break;
            case "/":
                result = String.valueOf(BigDecimal.valueOf(Float.valueOf(result) / Float.valueOf(second)));
                break;
            case "%":
                result = String.valueOf(BigDecimal.valueOf(Float.valueOf(result) % Float.valueOf(second)));
                break;
            case "oneby":
                result = String.valueOf(BigDecimal.valueOf(1 / Float.valueOf(second)));
                break;
            default:
                result = second;
        }
    }

    public int check_for_retype() {
        int flag = 0;
        if (operand_bar.getText().endsWith("+") || operand_bar.getText().endsWith("-") || operand_bar.getText().endsWith("*") || operand_bar.getText().endsWith("/") || operand_bar.getText().endsWith("%") || operand_bar.getText().endsWith("(")) {
            if (!result.equals("0") && result_setter == 0) {
                flag = 1;
            } else {
                flag = 0;
            }
        }
        return flag;
    }
    
    public void keyboard(int code)
    {
        switch (code)
        {
            case VK_0:
            case VK_NUMPAD0:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "0");
                break;
            case VK_1:
            case VK_NUMPAD1:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "1");
                break;
            case VK_2:
            case VK_NUMPAD2:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "2");
                break;
            case VK_3:
            case VK_NUMPAD3:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "3");
                break;
            case VK_4:
            case VK_NUMPAD4:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "4");
                break;
            case VK_5:
            case VK_NUMPAD5:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "5");
                break;
            case VK_6:
            case VK_NUMPAD6:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "6");
                break;
            case VK_7:
            case VK_NUMPAD7:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "7");
                break;
            case VK_8:
            case VK_NUMPAD8:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "8");
                break;
            case VK_9:
            case VK_NUMPAD9:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + "9");
                break;
            case VK_BACK_SPACE:
                int len = scien_input.getText().length();
                if (len != 0) {
                    String input = scien_input.getText();
                    scien_input.setText(input.substring(0, len - 1));
                }
                break;
            case VK_PERIOD:
            case VK_DECIMAL:
                if (check_for_retype() == 1) {
                    scien_input.setText("");
                    result_setter = 1;
                }
                scien_input.setText(scien_input.getText() + ".");
                break;
            case VK_PLUS:
            case VK_ADD:
                if (operator.equals("=") && count != 0) {
                    operand_bar.setText("");
                    result = scien_input.getText();
                    operator = "+";
                    operand_bar.setText(result + operator);
                    count = 0;
                } else {
                    if (count++ == 0) {
                        result = op1 = scien_input.getText();
                        operator = "+";
                        operand_bar.setText(operand_bar.getText() + op1 + "+");
                    } else {
                        op2 = scien_input.getText();
                        cal(op2, operator);
                        operator = "+";
                        operand_bar.setText(operand_bar.getText() + op2 + "+");
                        scien_input.setText(result);
                        //System.out.println(D.valueOf(result));
                    }
                }
                break;
            case VK_MINUS:
            case VK_SUBTRACT:
                if (operator.equals("=") && count != 0) {
                    operand_bar.setText("");
                    result = scien_input.getText();
                    operator = "+";
                    operand_bar.setText(result + operator);
                    count = 0;
                } else {
                    if (count++ == 0) {
                        result = op1 = scien_input.getText();
                        operator = "-";
                        operand_bar.setText(operand_bar.getText() + op1 + "-");
                    } else {
                        op2 = scien_input.getText();
                        cal(op2, operator);
                        operator = "-";
                        operand_bar.setText(operand_bar.getText() + op2 + "-");
                        scien_input.setText(result);
                    }
                }
                break;
            case VK_MULTIPLY:
                if (operator.equals("=") && count != 0) {
                    operand_bar.setText("");
                    result = scien_input.getText();
                    operator = "*";
                    operand_bar.setText(result + operator);
                    count = 0;
                } else {
                    if (count++ == 0) {
                        result = op1 = scien_input.getText();
                        operator = "*";
                        operand_bar.setText(operand_bar.getText() + op1 + "*");
                    } else {
                        op2 = scien_input.getText();
                        cal(op2, operator);
                        operator = "*";
                        operand_bar.setText(operand_bar.getText() + op2 + "*");
                        scien_input.setText(result);
                    }
                }
                break;
            case VK_DIVIDE:
                if (operator.equals("=") && count != 0) {
                    operand_bar.setText("");
                    result = scien_input.getText();
                    operator = "/";
                    operand_bar.setText(result + operator);
                    count = 0;
                } else {
                    if (count++ == 0) {
                        result = op1 = scien_input.getText();
                        operator = "/";
                        operand_bar.setText(operand_bar.getText() + op1 + "/");
                    } else {
                        op2 = scien_input.getText();
                        cal(op2, operator);
                        operator = "/";
                        operand_bar.setText(operand_bar.getText() + op2 + "/");
                        scien_input.setText(result);
                    }
                }
                break;
            case VK_AMPERSAND:
                if (operator.equals("=") && count != 0) {
                    operand_bar.setText("");
                    result = scien_input.getText();
                    operator = "%";
                    operand_bar.setText(result + operator);
                    count = 0;
                } else {
                    if (count++ == 0) {
                        result = op1 = scien_input.getText();
                        operator = "%";
                        operand_bar.setText(operand_bar.getText() + op1 + "%");
                    } else {
                        op2 = scien_input.getText();
                        cal(op2, operator);
                        operator = "%";
                        operand_bar.setText(operand_bar.getText() + op2 + "%");
                        scien_input.setText(result);
                    }
                }
                break;
            case VK_ENTER:
                op2 = scien_input.getText();
                if (!op2.equals("")) {
                    cal(op2, operator);
                    operand_bar.setText(operand_bar.getText() + op2);
                    scien_input.setText("");
                    scien_input.setText(result);
                    operator = "=";
                } else {
                    JOptionPane.showMessageDialog(null, " illegal Expression ", "Error!!", 1);
                }
                break;
            case VK_C:
                      scien_input.setText("");
                      operand_bar.setText("");
                      count=0;
                      result_setter=0;
                      result=String.valueOf(0); 
                break;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_ans;
    private javax.swing.JButton bt_cos;
    private javax.swing.JButton bt_cubroot;
    private javax.swing.JButton bt_equal;
    private javax.swing.JButton bt_exp;
    private javax.swing.JButton bt_ln;
    private javax.swing.JButton bt_log;
    private javax.swing.JButton bt_nfact;
    private javax.swing.JButton bt_onebyx;
    private javax.swing.JButton bt_pi;
    private javax.swing.JButton bt_sine;
    private javax.swing.JButton bt_square;
    private javax.swing.JButton bt_tan;
    private javax.swing.JButton bt_xcube;
    private javax.swing.JButton bt_xtoy;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem close;
    private javax.swing.JButton decimal;
    private javax.swing.JButton division;
    private javax.swing.JButton dzero;
    private javax.swing.JMenuItem edit_copy;
    private javax.swing.JMenuItem edit_paste;
    private javax.swing.JButton eight;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JMenu help_menu;
    private javax.swing.JMenuItem help_show;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JButton left_pen;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JButton minus;
    private javax.swing.JButton multi;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JLabel operand_bar;
    private javax.swing.JButton plus;
    private javax.swing.JButton plus_minus;
    private javax.swing.JButton precent;
    private javax.swing.JRadioButton rb_radian;
    private javax.swing.JRadioButton rb_theta;
    private javax.swing.JButton reset;
    private javax.swing.JButton right_pen;
    private javax.swing.JButton scien_del;
    private javax.swing.JLabel scien_input;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton sqrt;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JMenuItem update;
    private javax.swing.JMenu view_menu;
    private javax.swing.JMenuItem view_programmer;
    private javax.swing.JMenuItem view_sciencetific;
    private javax.swing.JMenuItem view_standard;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
