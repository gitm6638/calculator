/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.awt.Color;
import static java.lang.Math.pow;
import java.util.Stack;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import sun.org.mozilla.javascript.internal.regexp.SubString;

/**
 *
 * @author lib
 */
public class programmer_cal extends javax.swing.JFrame {

    /**
     * Creates new form programmer_cal
     */
    public programmer_cal() {
        initComponents();
        this.setLocation(400, 150);
        oprand_bar.setHorizontalAlignment(SwingConstants.RIGHT);
        //prog_input.setEnabled(false);
        set_color_focus_button();
        decimal.setEnabled(false);
        bt_free1.setEnabled(false);
        bt_free2.setEnabled(false);
        rb_hex.setSelected(true);
        setBounds(400, 150, 425, 350);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        operator = new javax.swing.ButtonGroup();
        data_type = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        bt_xor = new javax.swing.JButton();
        three = new javax.swing.JButton();
        bt_not = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        one = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        bt_e = new javax.swing.JButton();
        bt_equal = new javax.swing.JButton();
        bt_f = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        bt_and = new javax.swing.JButton();
        bt_or = new javax.swing.JButton();
        bt_d = new javax.swing.JButton();
        bt_a = new javax.swing.JButton();
        division = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        bt_b = new javax.swing.JButton();
        six = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        prog_del = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        multi = new javax.swing.JButton();
        bt_c = new javax.swing.JButton();
        two = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        oprand_bar = new javax.swing.JLabel();
        rb_octal = new javax.swing.JRadioButton();
        rb_hex = new javax.swing.JRadioButton();
        rb_binary = new javax.swing.JRadioButton();
        bt_free1 = new javax.swing.JButton();
        bt_free2 = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        prog_input = new javax.swing.JLabel();
        menu_bar = new javax.swing.JMenuBar();
        view_menu = new javax.swing.JMenu();
        view_standard = new javax.swing.JMenuItem();
        view_sciencetific = new javax.swing.JMenuItem();
        view_programmer = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        edit_copy = new javax.swing.JMenuItem();
        edit_paste = new javax.swing.JMenuItem();
        help_menu = new javax.swing.JMenu();
        help_show = new javax.swing.JMenuItem();
        update = new javax.swing.JMenuItem();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("                         Programmer");

        jLabel2.setText("Â© pankaj&company                                                                       All Rights Reserved");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jLabel4.setText("jLabel4");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Programmer");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        bt_xor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_xor.setText("XOR");
        operator.add(bt_xor);
        bt_xor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_xorActionPerformed(evt);
            }
        });
        getContentPane().add(bt_xor);
        bt_xor.setBounds(20, 120, 62, 40);

        three.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        getContentPane().add(three);
        three.setBounds(180, 200, 50, 40);

        bt_not.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_not.setText("NOT");
        operator.add(bt_not);
        bt_not.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_notActionPerformed(evt);
            }
        });
        getContentPane().add(bt_not);
        bt_not.setBounds(20, 160, 62, 40);

        four.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        getContentPane().add(four);
        four.setBounds(290, 160, 60, 40);

        five.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        getContentPane().add(five);
        five.setBounds(230, 160, 60, 40);

        one.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        getContentPane().add(one);
        one.setBounds(290, 200, 60, 40);

        nine.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        getContentPane().add(nine);
        nine.setBounds(180, 120, 50, 40);

        zero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        getContentPane().add(zero);
        zero.setBounds(180, 240, 50, 40);

        eight.setFont(eight.getFont().deriveFont(eight.getFont().getStyle() | java.awt.Font.BOLD));
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        getContentPane().add(eight);
        eight.setBounds(230, 120, 60, 40);

        bt_e.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_e.setText("E");
        bt_e.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eActionPerformed(evt);
            }
        });
        getContentPane().add(bt_e);
        bt_e.setBounds(80, 120, 39, 39);

        bt_equal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_equal.setText("=");
        bt_equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_equalActionPerformed(evt);
            }
        });
        getContentPane().add(bt_equal);
        bt_equal.setBounds(290, 240, 60, 40);

        bt_f.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_f.setText("F");
        bt_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_fActionPerformed(evt);
            }
        });
        getContentPane().add(bt_f);
        bt_f.setBounds(80, 160, 39, 40);

        seven.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        getContentPane().add(seven);
        seven.setBounds(290, 120, 60, 40);

        bt_and.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_and.setText("AND");
        operator.add(bt_and);
        bt_and.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_andActionPerformed(evt);
            }
        });
        getContentPane().add(bt_and);
        bt_and.setBounds(20, 240, 62, 40);

        bt_or.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_or.setText("OR");
        operator.add(bt_or);
        bt_or.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_orActionPerformed(evt);
            }
        });
        getContentPane().add(bt_or);
        bt_or.setBounds(20, 200, 62, 40);

        bt_d.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_d.setText("D");
        bt_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_dActionPerformed(evt);
            }
        });
        getContentPane().add(bt_d);
        bt_d.setBounds(120, 240, 60, 40);

        bt_a.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_a.setText("A");
        bt_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_aActionPerformed(evt);
            }
        });
        getContentPane().add(bt_a);
        bt_a.setBounds(120, 120, 60, 40);

        division.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        division.setText("/");
        operator.add(division);
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });
        getContentPane().add(division);
        division.setBounds(350, 120, 60, 40);

        reset.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reset.setText("C");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(290, 80, 60, 40);

        bt_b.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_b.setText("B");
        bt_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_bActionPerformed(evt);
            }
        });
        getContentPane().add(bt_b);
        bt_b.setBounds(120, 160, 60, 40);

        six.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        getContentPane().add(six);
        six.setBounds(180, 160, 50, 40);

        plus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        plus.setText("+");
        operator.add(plus);
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        getContentPane().add(plus);
        plus.setBounds(350, 240, 60, 40);

        prog_del.setText("â");
        prog_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prog_delActionPerformed(evt);
            }
        });
        getContentPane().add(prog_del);
        prog_del.setBounds(350, 80, 60, 40);

        minus.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        minus.setText("-");
        operator.add(minus);
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        getContentPane().add(minus);
        minus.setBounds(350, 200, 60, 40);

        multi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        multi.setText("*");
        operator.add(multi);
        multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiActionPerformed(evt);
            }
        });
        getContentPane().add(multi);
        multi.setBounds(350, 160, 60, 40);

        bt_c.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bt_c.setText("C");
        bt_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cActionPerformed(evt);
            }
        });
        getContentPane().add(bt_c);
        bt_c.setBounds(120, 200, 60, 40);

        two.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        getContentPane().add(two);
        two.setBounds(230, 200, 60, 40);

        jLabel3.setText("Â© pankaj&company                                                         All Rights Reserved");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 280, 390, 20);

        oprand_bar.setBackground(new java.awt.Color(255, 255, 51));
        oprand_bar.setFont(new java.awt.Font("Segoe Print", 3, 14)); // NOI18N
        oprand_bar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        oprand_bar.setOpaque(true);
        oprand_bar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oprand_barFocusGained(evt);
            }
        });
        getContentPane().add(oprand_bar);
        oprand_bar.setBounds(20, 10, 390, 30);

        data_type.add(rb_octal);
        rb_octal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rb_octal.setText("OCTAL");
        rb_octal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb_octalItemStateChanged(evt);
            }
        });
        rb_octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_octalActionPerformed(evt);
            }
        });
        getContentPane().add(rb_octal);
        rb_octal.setBounds(120, 80, 110, 40);

        data_type.add(rb_hex);
        rb_hex.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rb_hex.setText("HEX");
        rb_hex.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb_hexItemStateChanged(evt);
            }
        });
        rb_hex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_hexActionPerformed(evt);
            }
        });
        getContentPane().add(rb_hex);
        rb_hex.setBounds(230, 80, 60, 40);

        data_type.add(rb_binary);
        rb_binary.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rb_binary.setText("BINARY");
        rb_binary.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb_binaryItemStateChanged(evt);
            }
        });
        rb_binary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_binaryActionPerformed(evt);
            }
        });
        getContentPane().add(rb_binary);
        rb_binary.setBounds(20, 80, 100, 36);
        getContentPane().add(bt_free1);
        bt_free1.setBounds(80, 200, 40, 40);
        getContentPane().add(bt_free2);
        bt_free2.setBounds(80, 240, 40, 40);

        decimal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        decimal.setText(".");
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        getContentPane().add(decimal);
        decimal.setBounds(230, 240, 60, 40);

        prog_input.setBackground(new java.awt.Color(255, 255, 255));
        prog_input.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prog_input.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        prog_input.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        prog_input.setOpaque(true);
        getContentPane().add(prog_input);
        prog_input.setBounds(20, 40, 390, 30);

        view_menu.setText("View");
        view_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_menuActionPerformed(evt);
            }
        });

        view_standard.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
        view_standard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/standard.png"))); // NOI18N
        view_standard.setText("Standard");
        view_standard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_standardActionPerformed(evt);
            }
        });
        view_standard.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                view_standardFocusGained(evt);
            }
        });
        view_menu.add(view_standard);

        view_sciencetific.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_MASK));
        view_sciencetific.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/scientific.png"))); // NOI18N
        view_sciencetific.setText("Sciencetific");
        view_sciencetific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_sciencetificActionPerformed(evt);
            }
        });
        view_menu.add(view_sciencetific);

        view_programmer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.ALT_MASK));
        view_programmer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/programmer.png"))); // NOI18N
        view_programmer.setText("Programmer");
        view_programmer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_programmerActionPerformed(evt);
            }
        });
        view_menu.add(view_programmer);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/close.png"))); // NOI18N
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        view_menu.add(close);

        menu_bar.add(view_menu);

        jMenu2.setText("Edit");

        edit_copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        edit_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/edit_copy.png"))); // NOI18N
        edit_copy.setText("Copy");
        jMenu2.add(edit_copy);

        edit_paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        edit_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/edit_paste.png"))); // NOI18N
        edit_paste.setText("Paste");
        jMenu2.add(edit_paste);

        menu_bar.add(jMenu2);

        help_menu.setText("Help");

        help_show.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        help_show.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/help.png"))); // NOI18N
        help_show.setText("View Help");
        help_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_showActionPerformed(evt);
            }
        });
        help_menu.add(help_show);

        update.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, java.awt.event.InputEvent.ALT_MASK));
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculator/system_update.png"))); // NOI18N
        update.setText("Check for update");
        help_menu.add(update);

        menu_bar.add(help_menu);

        setJMenuBar(menu_bar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rb_octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_octalActionPerformed
        // TODO add your handling code here:
        prog_input.setEnabled(true);
        bt_a.setEnabled(false);
        bt_b.setEnabled(false);
        bt_c.setEnabled(false);
        bt_d.setEnabled(false);
        bt_e.setEnabled(false);
        bt_f.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);
        one.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        one.setEnabled(true);
    }//GEN-LAST:event_rb_octalActionPerformed

    private void rb_binaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_binaryActionPerformed
        // TODO add your handling code here:
        prog_input.setEnabled(true);
        bt_a.setEnabled(false);
        bt_b.setEnabled(false);
        bt_c.setEnabled(false);
        bt_d.setEnabled(false);
        bt_e.setEnabled(false);
        bt_f.setEnabled(false);
        two.setEnabled(false);
        three.setEnabled(false);
        four.setEnabled(false);
        five.setEnabled(false);
        six.setEnabled(false);
        seven.setEnabled(false);
        eight.setEnabled(false);
        nine.setEnabled(false);

    }//GEN-LAST:event_rb_binaryActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"3");
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"4");
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"5");
    }//GEN-LAST:event_fiveActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"1");
    }//GEN-LAST:event_oneActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"9");
    }//GEN-LAST:event_nineActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"0");
    }//GEN-LAST:event_zeroActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"8");
    }//GEN-LAST:event_eightActionPerformed

    private void bt_eActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"E");
    }//GEN-LAST:event_bt_eActionPerformed

    private void bt_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_fActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"F");
    }//GEN-LAST:event_bt_fActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"7");
    }//GEN-LAST:event_sevenActionPerformed

    private void bt_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_dActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"D");
    }//GEN-LAST:event_bt_dActionPerformed

    private void bt_aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_aActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"A");
    }//GEN-LAST:event_bt_aActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
        oprand_bar.setText(prog_input.getText()+"/");
        prog_input.setText("");
    }//GEN-LAST:event_divisionActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        prog_input.setText("");
        oprand_bar.setText("");
    }//GEN-LAST:event_resetActionPerformed

    private void bt_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_bActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"B");
    }//GEN-LAST:event_bt_bActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"6");
    }//GEN-LAST:event_sixActionPerformed

    private void rb_hexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_hexActionPerformed
        // TODO add your handling code here:
        prog_input.setEnabled(true);
        two.setEnabled(true);
        three.setEnabled(true);
        four.setEnabled(true);
        five.setEnabled(true);
        six.setEnabled(true);
        seven.setEnabled(true);
        eight.setEnabled(true);
        nine.setEnabled(true);
        bt_a.setEnabled(true);
        bt_b.setEnabled(true);
        bt_c.setEnabled(true);
        bt_d.setEnabled(true);
        bt_e.setEnabled(true);
        bt_f.setEnabled(true);
    }//GEN-LAST:event_rb_hexActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
         oprand_bar.setText(prog_input.getText()+"+");
          prog_input.setText("");
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        // TODO add your handling code here:
         oprand_bar.setText(prog_input.getText()+"-");
          prog_input.setText("");
    }//GEN-LAST:event_minusActionPerformed

    private void multiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiActionPerformed
        // TODO add your handling code here:
         oprand_bar.setText(prog_input.getText()+"*");
          prog_input.setText("");
    }//GEN-LAST:event_multiActionPerformed

    private void bt_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"C");
    }//GEN-LAST:event_bt_cActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+"2");
    }//GEN-LAST:event_twoActionPerformed

    private void view_standardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_standardActionPerformed
        // TODO add your handling code here:
        standard_cal st=new standard_cal();
        st.setVisible(true);
        dispose();
    }//GEN-LAST:event_view_standardActionPerformed

    private void view_standardFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_view_standardFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_view_standardFocusGained

    private void view_sciencetificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_sciencetificActionPerformed
        // TODO add your handling code here:
        scientific_cal  sc=new scientific_cal();
        sc.setVisible(true);
        dispose();
    }//GEN-LAST:event_view_sciencetificActionPerformed

    private void view_programmerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_programmerActionPerformed
        // TODO add your handling code here:
       programmer_cal pr=new programmer_cal();
       pr.setVisible(true);
       dispose(); 
    }//GEN-LAST:event_view_programmerActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_closeActionPerformed

    private void view_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_menuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_view_menuActionPerformed

    private void help_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_showActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_help_showActionPerformed

    private void prog_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prog_delActionPerformed
        // TODO add your handling code here:
          int len=prog_input.getText().length();
          if(len!=0)
          {   
            String input=prog_input.getText();
           prog_input.setText(input.substring(0,len-1));
          }
    }//GEN-LAST:event_prog_delActionPerformed

    private void bt_equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_equalActionPerformed
        // TODO add your handling code here:
        String op1=oprand_bar.getText().substring(0,oprand_bar.getText().length()-1);
        String op2=prog_input.getText();
        prog_input.setText("");
        oprand_bar.setText(oprand_bar.getText()+op2);
        char oprator=oprand_bar.getText().charAt(op1.length());
        if(rb_binary.isSelected())
        {
           op1=decimalof(Integer.parseInt(op1),2);
           op2=decimalof(Integer.parseInt(op2),2);
           String result="";
            switch(oprator)
            {
                case '+':
                     result=String.valueOf(Integer.parseInt(op1)+Integer.parseInt(op2));
                     break;
                case '-':
                     result=String.valueOf(Integer.parseInt(op1)-Integer.parseInt(op2));
                    break;
                case '*':
                     result=String.valueOf(Integer.parseInt(op1)*Integer.parseInt(op2));
                    break;
                case '/':
                     result=String.valueOf(Integer.parseInt(op1)/Integer.parseInt(op2));
                    break;
                case 'A':
                   result=String.valueOf(Integer.parseInt(op1)&Integer.parseInt(op2));
                    break;
                case 'O':
                    result=String.valueOf(Integer.parseInt(op1)|Integer.parseInt(op2));
                    break;
                case 'X':
                    result=String.valueOf(Integer.parseInt(op1)^Integer.parseInt(op2));
                    break;
            }
            prog_input.setText(decimalto(result, 2));
        }
        if(rb_octal.isSelected())
        {
           op1=decimalof(Integer.parseInt(op1),8);
           op2=decimalof(Integer.parseInt(op2),8);
           String result="";
            switch(oprator)
            {
                case '+':
                     result=String.valueOf(Integer.parseInt(op1)+Integer.parseInt(op2));
                     break;
                case '-':
                     result=String.valueOf(Integer.parseInt(op1)-Integer.parseInt(op2));
                    break;
                case '*':
                     result=String.valueOf(Integer.parseInt(op1)*Integer.parseInt(op2));
                    break;
                case '/':
                     result=String.valueOf(Integer.parseInt(op1)/Integer.parseInt(op2));
                    break;
                case 'A':
                   result=String.valueOf(Integer.parseInt(op1)&Integer.parseInt(op2));
                    break;
                case 'O':
                    result=String.valueOf(Integer.parseInt(op1)|Integer.parseInt(op2));
                    break;
                case 'X':
                    result=String.valueOf(Integer.parseInt(op1)^Integer.parseInt(op2));
                    break;
            }  
            prog_input.setText(decimalto(result, 8));
        }  
        if(rb_hex.isSelected())
        {
           op1=decimalof(Integer.parseInt(op1),16);
           op2=decimalof(Integer.parseInt(op2),16);
           String result="";
            switch(oprator)
            {
                case '+':
                     result=String.valueOf(Integer.parseInt(op1)+Integer.parseInt(op2));
                     break;
                case '-':
                     result=String.valueOf(Integer.parseInt(op1)-Integer.parseInt(op2));
                    break;
                case '*':
                     result=String.valueOf(Integer.parseInt(op1)*Integer.parseInt(op2));
                    break;
                case '/':
                     result=String.valueOf(Integer.parseInt(op1)/Integer.parseInt(op2));
                    break;
                case 'A':
                   result=String.valueOf(Integer.parseInt(op1)&Integer.parseInt(op2));
                    break;
                case 'O':
                    result=String.valueOf(Integer.parseInt(op1)|Integer.parseInt(op2));
                    break;
                case 'X':
                    result=String.valueOf(Integer.parseInt(op1)^Integer.parseInt(op2));
                    break;
            }
            prog_input.setText(decimalto(result, 16));
        }
        
    }//GEN-LAST:event_bt_equalActionPerformed

    private void bt_andActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_andActionPerformed
        // TODO add your handling code here:
        oprand_bar.setText(prog_input.getText()+"A");
         prog_input.setText("");
    }//GEN-LAST:event_bt_andActionPerformed

    private void bt_orActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_orActionPerformed
        // TODO add your handling code here:
        oprand_bar.setText(prog_input.getText()+"O");
         prog_input.setText("");
    }//GEN-LAST:event_bt_orActionPerformed

    private void bt_notActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_notActionPerformed
        // TODO add your handling code here:
         oprand_bar.setText(prog_input.getText()+"N");
          prog_input.setText("");
    }//GEN-LAST:event_bt_notActionPerformed

    private void bt_xorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_xorActionPerformed
        // TODO add your handling code here:
        oprand_bar.setText(prog_input.getText()+"X");
         prog_input.setText("");
    }//GEN-LAST:event_bt_xorActionPerformed

    private void oprand_barFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oprand_barFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_oprand_barFocusGained

    private void rb_binaryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb_binaryItemStateChanged
        // TODO add your handling code here:
        prog_input.setText("");
        oprand_bar.setText("");
    }//GEN-LAST:event_rb_binaryItemStateChanged

    private void rb_octalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb_octalItemStateChanged
        // TODO add your handling code here:
        prog_input.setText("");
        oprand_bar.setText("");
    }//GEN-LAST:event_rb_octalItemStateChanged

    private void rb_hexItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb_hexItemStateChanged
        // TODO add your handling code here:
        prog_input.setText("");
        oprand_bar.setText("");
    }//GEN-LAST:event_rb_hexItemStateChanged

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        // TODO add your handling code here:
        prog_input.setText(prog_input.getText()+".");
    }//GEN-LAST:event_decimalActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        prog_input.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(programmer_cal.class.getName()).log(java.util.logging.Level.SEVERE, "", ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(programmer_cal.class.getName()).log(java.util.logging.Level.SEVERE, "", ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(programmer_cal.class.getName()).log(java.util.logging.Level.SEVERE, "", ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(programmer_cal.class.getName()).log(java.util.logging.Level.SEVERE, "", ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new programmer_cal().setVisible(true);
            }
        });
    }
    
    public void set_color_focus_button() {
        one.setBackground(Color.white);
        one.setFocusable(false);
        two.setBackground(Color.white);
        two.setFocusable(false);
        three.setBackground(Color.white);
        three.setFocusable(false);
        four.setBackground(Color.white);
        four.setFocusable(false);
        five.setBackground(Color.white);
        five.setFocusable(false);
        six.setBackground(Color.white);
        six.setFocusable(false);
        seven.setBackground(Color.white);
        seven.setFocusable(false);
        eight.setBackground(Color.white);
        eight.setFocusable(false);
        nine.setBackground(Color.white);
        nine.setFocusable(false);
        zero.setBackground(Color.white);
        zero.setFocusable(false);
        decimal.setBackground(Color.white);
        decimal.setFocusable(false);
        
        bt_a.setFocusable(false);
        bt_a.setBackground(Color.white);
        bt_b.setFocusable(false);
        bt_b.setBackground(Color.white);
        bt_c.setFocusable(false);
        bt_c.setBackground(Color.white);
        bt_d.setFocusable(false);
        bt_d.setBackground(Color.white);
        bt_e.setFocusable(false);
        bt_e.setBackground(Color.white);
        bt_f.setFocusable(false);
        bt_f.setBackground(Color.white);
        bt_free1.setFocusable(false);
        bt_free2.setFocusable(false);
        
        bt_equal.setBackground(Color.white);
        bt_equal.setFocusable(false);
        
        prog_del.setBackground(Color.white);
        prog_del.setFocusable(false);
        reset.setBackground(Color.white);
        reset.setFocusable(false);
        
        division.setBackground(Color.white);
        division.setFocusable(false);
        multi.setBackground(Color.white);
        multi.setFocusable(false);
        minus.setBackground(Color.white);
        minus.setFocusable(false);
        plus.setBackground(Color.white);
        plus.setFocusable(false);
        
        bt_xor.setFocusable(false);
        bt_xor.setBackground(Color.white);
        bt_not.setFocusable(false);
        bt_not.setBackground(Color.white);
        bt_and.setFocusable(false);
        bt_and.setBackground(Color.white);
        bt_or.setFocusable(false);
        bt_or.setBackground(Color.white);
        
        rb_binary.setFocusable(false);
        rb_hex.setFocusable(false);
        rb_octal.setFocusable(false);
        rb_binary.setBackground(Color.white);
        rb_hex.setBackground(Color.white);
        rb_octal.setBackground(Color.white);
        
    }
    
    
    public String decimalof(long data,int base)
    {
      String input=String.valueOf(data);
      long decimal=0;
      for(int i=0;i<input.length();i++)
          decimal+=(input.charAt(i)-'0')*pow(base,input.length()-i-1);
      return String.valueOf(decimal);
    }
    public String decimalto(String input,int base)
    {
       String othertbase="";
       Stack st1=new Stack();
       if(Integer.parseInt(input)!=0)
       {
         while(Integer.parseInt(input)!=0)
         {
           st1.push(Integer.parseInt(input)%base);
           input=(String.valueOf((Integer.parseInt(input))/base));
         }
       }
       else
           st1.push(0);
       if(base!=16)
       {
         do
         {
           othertbase+=(int)st1.pop();
         }while(!st1.empty());
       }
       else
       {
           Object c;
           do
           {
               c=st1.pop();
               if((int)c==10)
                   othertbase+="A";
               else if((int)c==11)
                   othertbase+="B";
               else if((int)c==12)
                   othertbase+="C";
               else if((int)c==13)
                   othertbase+="D";
               else if((int)c==14)
                   othertbase+="E";
               else if((int)c==15)
                   othertbase+="F";
               else
                   othertbase+=c;
           }while(!st1.empty());
       }
     return othertbase;
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_a;
    private javax.swing.JButton bt_and;
    private javax.swing.JButton bt_b;
    private javax.swing.JButton bt_c;
    private javax.swing.JButton bt_d;
    private javax.swing.JButton bt_e;
    private javax.swing.JButton bt_equal;
    private javax.swing.JButton bt_f;
    private javax.swing.JButton bt_free1;
    private javax.swing.JButton bt_free2;
    private javax.swing.JButton bt_not;
    private javax.swing.JButton bt_or;
    private javax.swing.JButton bt_xor;
    private javax.swing.JMenuItem close;
    private javax.swing.ButtonGroup data_type;
    private javax.swing.JButton decimal;
    private javax.swing.JButton division;
    private javax.swing.JMenuItem edit_copy;
    private javax.swing.JMenuItem edit_paste;
    private javax.swing.JButton eight;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JMenu help_menu;
    private javax.swing.JMenuItem help_show;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JButton minus;
    private javax.swing.JButton multi;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.ButtonGroup operator;
    private javax.swing.JLabel oprand_bar;
    private javax.swing.JButton plus;
    private javax.swing.JButton prog_del;
    private javax.swing.JLabel prog_input;
    private javax.swing.JRadioButton rb_binary;
    private javax.swing.JRadioButton rb_hex;
    private javax.swing.JRadioButton rb_octal;
    private javax.swing.JButton reset;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JMenuItem update;
    private javax.swing.JMenu view_menu;
    private javax.swing.JMenuItem view_programmer;
    private javax.swing.JMenuItem view_sciencetific;
    private javax.swing.JMenuItem view_standard;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
